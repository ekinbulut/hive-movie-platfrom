// <auto-generated />
using System;
using Infrastructure.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(HiveDbContext))]
    [Migration("20251015120132_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_time");

                    b.Property<string>("FilePath")
                        .HasColumnType("character varying")
                        .HasColumnName("file_path");

                    b.Property<long?>("FileSize")
                        .HasColumnType("bigint")
                        .HasColumnName("file_size");

                    b.Property<string>("HashValue")
                        .HasColumnType("character varying")
                        .HasColumnName("hash_value");

                    b.Property<string>("Image")
                        .HasColumnType("character varying")
                        .HasColumnName("image");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<string>("JellyFinId")
                        .HasColumnType("text")
                        .HasColumnName("jellyfin_id");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_time");

                    b.Property<string>("Name")
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.Property<int?>("ReleaseDate")
                        .HasColumnType("integer")
                        .HasColumnName("release_date");

                    b.Property<string>("SubTitleFilePath")
                        .HasColumnType("character varying")
                        .HasColumnName("sub_title_file_path");

                    b.HasKey("Id")
                        .HasName("movies_pk_id");

                    b.ToTable("movies", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
